{
    "contents" : "##\n## The function makeCacheMatrix creates a special \"Matrix\" object that can cache its inverse, it is really a list containing a function to\n## 1 - set the value of the Matrix\n## 2 - get the value of the Matrix\n## 3 - set the value of the inverse Matrix\n## 4 - get the value of the inverse Matrix\n## This function creates a special \"matrix\" \n## \nmakeCacheMatrix <- function(x = matrix()) {\n        \n        mat_inv <- NULL\n        ## print the function environment \n        print(environment())\n        ## print the parent environment \n        evn <- environment()\n        print(parent.env(evn))\n        ## set function definition\n        set <- function(y) {\n                x <<- y\n                mat_inv <<- NULL\n        }\n        ## get function definition\n        get <- function() x\n        ## setsolve function definition\n        setsolve <- function(solve) mat_inv <<- solve\n        ## getsolve function definition\n        getsolve <- function() mat_inv\n        \n        getevn<- function() environment()\n        ## list definition\n        list(set = set, get = get,\n             setsolve = setsolve,\n             getsolve = getsolve,\n             getevn = getevn)\n}\n",
    "created" : 1426960365764.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1263607252",
    "id" : "DB7EC179",
    "lastKnownWriteTime" : 1426960403,
    "path" : "~/ProgrammingAssignment2/MakeCacheMatrix.R",
    "project_path" : "MakeCacheMatrix.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}